#include<stdio.h>
#include<stdlib.h>

#define true 1
#define false 0

typedef int bool;
typedef int TIPOCHAVE;

typedef struct {
    TIPOCHAVE chave;
} REGISTRO;

typedef struct aux {
    REGISTRO reg;
    struct aux* prox;
} ELEMENTO;

typedef ELEMENTO* PONT;

typedef struct {
    PONT inicio;
    PONT fim;
} FILA;

void inicializarFila(FILA* f) {
    f->inicio = NULL;
    f->fim = NULL;
}

int tamanhoFila(FILA* f) {
    PONT end = f->inicio;
    int tam = 0;
    while(end != NULL) {
        tam++;
        end = end->prox;
    }
    return tam;
}

void exibirFila(FILA* f) {
    printf("Fila: \" ");
    PONT end = f->inicio;
    while(end != NULL) {
        printf("%i ", end->reg.chave);
        end = end->prox;
    }
    printf("\"\n");
}

bool inserirElementoFila(FILA* f, REGISTRO reg) {
    PONT novo = (PONT) malloc(sizeof(ELEMENTO));
    if (novo == NULL) return false; // Verificação de alocação
    novo->reg = reg;
    novo->prox = NULL;
    if(f->inicio == NULL) {
        f->inicio = novo;
    } else {
        f->fim->prox = novo;
    }
    f->fim = novo; // Atualização do campo fim
    return true;
}

bool excluirElementoFila(FILA* f, REGISTRO* reg) {
    if(f->inicio == NULL) {
        return false;
    }
    *reg = f->inicio->reg;
    PONT apagar = f->inicio;
    f->inicio = f->inicio->prox;
    free(apagar);
    if(f->inicio == NULL) {
        f->fim = NULL;
    }

    printf("%d ", reg->chave);
    return true;
}

void reinicializarFila(FILA* f) {
    PONT end = f->inicio;
    while(end != NULL) {
        PONT apagar = end;
        end = end->prox;
        free(apagar);
    }
    f->inicio = NULL;
    f->fim = NULL; 
}

int main()
{
    FILA filaPar;
    FILA filaImpar;
    FILA fila;
    inicializarFila(&filaPar);
    inicializarFila(&filaImpar);

    REGISTRO reg;
    reg.chave = 1;

    scanf("%d", &reg.chave);
    while (reg.chave != 0)
    {
        if(reg.chave % 2 == 0)
        {
            inserirElementoFila(&filaPar, reg);  
        } else {
            inserirElementoFila(&filaImpar, reg);
        }
        scanf("%d", &reg.chave);
    }
    
    exibirFila(&filaPar);
    exibirFila(&filaImpar);

    int tamPar = tamanhoFila(&filaPar);
    int tamImpar = tamanhoFila(&filaImpar);

    while(tamImpar > 0 || tamPar > 0) 
    {
        if(excluirElementoFila(&filaImpar, &reg))
        {
            tamImpar--;
        }
        if(excluirElementoFila(&filaPar, &reg))
        {
            tamPar--;
        }
    }

    return 0;
}


